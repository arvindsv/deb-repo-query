<?xml version="1.0"?>
<project name="deb-repo-query" default="main" basedir=".">
    <property name="one-jar.dist.dir" value="./lib"/>
    <property name="one-jar.version" value="0.96"/>
    <taskdef name="one-jar" classname="com.simontuffs.onejar.ant.OneJarTask"
             classpath="${one-jar.dist.dir}/one-jar-ant-task-${one-jar.version}.jar" onerror="report"/>

    <!-- Sets variables which can later be used. -->
    <!-- The value of a property is accessed via ${} -->
    <property name="src.dir" location="src"/>
    <property name="test.dir" location="test"/>
    <property name="lib.dir" location="lib"/>
    <property name="build.dir" location="bin"/>
    <property name="dist.dir" location="dist"/>
    <property name="docs.dir" location="docs"/>

    <path id="src.classpath">
        <pathelement location="${lib.dir}/commons-io-2.4.jar"/>
        <pathelement location="${lib.dir}/sqlite-jdbc-3.7.2.jar"/>
    </path>
    <path id="test.classpath">
        <pathelement location="${lib.dir}/junit-4.11.jar"/>
        <pathelement location="${lib.dir}/hamcrest-all-1.3.jar"/>
    </path>

    <!-- Deletes the existing build, docs and dist directory-->
    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${docs.dir}"/>
    </target>

    <!-- Creates the  build, docs and dist directory-->
    <target name="makedir">
        <mkdir dir="${build.dir}/src"/>
        <mkdir dir="${build.dir}/test"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${docs.dir}"/>
    </target>

    <!-- Compiles the java code (including the usage of library for JUnit -->
    <target name="compile" depends="clean, makedir">
        <javac srcdir="${src.dir}" destdir="${build.dir}/src">
            <classpath>
                <path refid="src.classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="compile-test" depends="clean, makedir">
        <javac srcdir="${test.dir}" destdir="${build.dir}/test">
            <classpath>
                <pathelement location="${build.dir}/src"/>
                <path refid="src.classpath"/>
                <path refid="test.classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile, compile-test">
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <pathelement location="${build.dir}/src"/>
                <pathelement location="${build.dir}/test"/>
                <path refid="src.classpath"/>
                <path refid="test.classpath"/>
            </classpath>
            <batchtest fork="yes">
                <fileset dir="test">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- Creates Javadoc -->
    <target name="docs" depends="compile">
        <javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
            <!-- Define which files / directory should get included, we include all -->
            <fileset dir="${src.dir}">
                <include name="**"/>
            </fileset>
        </javadoc>
    </target>

    <!-- Creates the jar file -->
    <target name="mainjar" depends="compile">
        <jar destfile="${dist.dir}\deb-repo-query.jar" basedir="${build.dir}/src">
            <manifest>
                <attribute name="Main-Class" value="com.tw.pkg.deb.main.Main"/>
            </manifest>
        </jar>
    </target>

    <!-- Construct the One-JAR file -->
    <target name="onejar" depends="mainjar">
        <one-jar destfile="${dist.dir}/deb-repo-query-with-dependencies.jar">
            <main jar="${dist.dir}/deb-repo-query.jar"/>
            <lib>
                <fileset dir="${lib.dir}">
                    <include name="commons-io-2.4.jar"/>
                    <include name="sqlite-jdbc-3.7.2.jar"/>
                </fileset>
            </lib>
        </one-jar>
    </target>

    <target name="main" depends="compile, test, mainjar, onejar">
        <description>Main target</description>
    </target>
</project>